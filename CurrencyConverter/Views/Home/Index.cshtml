@using CurrencyConverter.ViewModels
@using Microsoft.AspNetCore.Mvc.Localization
@using Microsoft.Extensions.Localization;
@inject IViewLocalizer Localizer
@inject IStringLocalizer stringLocalizer
@model CurrencyViewModel
    <h1 class="m-3" id="header">@Localizer["Header"]</h1>
    <div class="form-group col-3">
        @await Html.PartialAsync("_SelectLanguagePartial")
    </div>
    <div class="container m-3 bg-white" id="head-container">        
        <div class="row">
            <div class="col-5">
                <div class="row">
                    <div class="col">
                        <span>@Model.Value1</span>
                        <span>@Model.Name1</span>
                        <span>@Localizer["Equally"]</span>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col">
                        <h3 class="font-weight-bold">
                            @Model.Value2  @Model.Name2
                        </h3>
                    </div>
                </div>
                <form asp-action="Index" method="get" id="first_form">
                    <div class="row mt-5">
                        <div class="col-6 form-group">
                            <input asp-for="@Model.Value1" id="first_currency" type="text" class="form-control" value="@Model.Value1" />
                        </div>
                        <div class="col-6 form-group">
                            <select id="first_select" data-size="auto" class="form-control selectpicker border" data-live-search="true" asp-for="@Model.Cur_Id1"
                                    asp-items="@Model.CurrencyNames">
                            </select>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-6 form-group">
                            <input type="hidden" name="from_two_input" value="false" id="temp_input" />
                            
                            <input asp-for="@Model.Value2" type="text" class="form-control" id="second_currency" value="@Model.Value2" />
                        </div>
                        <div class="col-6 form-group">
                            <select id="second_select" data-size="auto" class="form-control selectpicker border" data-live-search="true" asp-for="@Model.Cur_Id2"
                                    asp-items="@Model.CurrencyNames">
                            </select>
                        </div>
                    </div>
                    <input id="gap_input" type="hidden" name="gap" value="@ViewBag.Gap" />
                </form>
            </div>
            <div class="col-7">
                <div class="m-1 d-flex justify-content-center" aria-label="Basic example">
                    <button id="five_days" type="button" class="btn gap_buttons">@Localizer["FiveDays"]</button>
                    <button id="month" type="button" class="btn gap_buttons">@Localizer["Month"]</button>
                    <button id="year" type="button" class="btn gap_buttons">@Localizer["Year"]</button>
                </div>
                <vc:chartjs data="@Model.data" labels="@Model.labels" />
            </div>
        </div>
    </div>
@section scripts{
    <script>
        $(document).ready(function () {
            (function () {
                let first_select = $("#first_select");
                first_select.data("prev_first", first_select.val());
                first_select.change(function () {
                    if ($("#first_select").val() === $("#second_select").val()) {
                        let jqThis = $(this);
                        $("#second_select").val(jqThis.data("prev_first")).change();
                    }
                    $("#first_form").submit();
                });
                let second_select = $("#second_select");
                second_select.data("prev_second", second_select.val());
                second_select.change(function () {
                    if ($("#first_select").val() === $("#second_select").val()) {
                        let jqThis = $(this);
                        $("#first_select").val(jqThis.data("prev_second")).change();
                    }
                    $("#first_form").submit();
                });
            })();

            function validateAndSumbit(introduced_input, received_input, set_value) {
                let value = $(introduced_input).val();                
                let tmp = value.split(",").join(".");
                let k = 0;
                for (let i of tmp) {
                    if (i === ".")
                        k++;
                }
                if (k > 1) {
                    $(received_input).val("");
                    return;
                }
                $(introduced_input).val(tmp);
                if (value.charAt(value.length - 1) === "," || value.charAt(value.length - 1) === "." || value.trim() === "") {
                    $(received_input).val("");
                }
                else {
                    $("#temp_input").val(set_value);
                    $("#first_form").submit();
                }
            }
            $("#five_days, #month, #year").on("click", function (event) {                
                $("#gap_input").val(event.target.id);
                validateAndSumbit("#first_currency", "#second_currency", "false");
            });
            $("#second_currency").on("keyup", function () {
                validateAndSumbit("#second_currency", "#first_currency", "true");
            });

            $("#first_currency").on("keyup", function () {
                validateAndSumbit("#first_currency", "#second_currency", "false");
            });

            $("#second_currency, #first_currency").on("keypress", function () {
                $(this).val($(this).val().replace(/[^0-9\.|\,]/g,''));
                debugger;
                if(event.which == 44) {
                    return true;
                }
               if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
               } 
            });
        });
    </script>
}
